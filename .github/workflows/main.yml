jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14, 16, 18 ]
    name: Node ${{ matrix.node }} sample
    steps:
        uses: actions/checkout@v2
        uses: actions/setup-node@v2
      # caching NPM dependencies
      # https://github.com/actions/cache/blob/master/examples.md#node---npm
        with:
          node-version: 7
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          cache: 'npm'
        - run: npm ci --legacy-peer-deps
        - run: npm run reinstall --legacy-peer-deps
    
      # only makes sense to check code format on 1 OS
      - name: Linting ðŸ§¹
        if: matrix.os == 'ubuntu-20.04'
        run: npm test

  release:
    runs-on: ubuntu-20.04
    name: release
    needs: build-and-test
    # only release from the master branch
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: echo $GITHUB_SHA

      # trying to use this action to install dependencies for semantic release
      - uses: bahmutov/npm-install@HEAD

      # https://github.com/cycjimmy/semantic-release-action
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          branch: master
          extra_plugins: |
            @semantic-release/git
            @semantic-release/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push updates to branch for major version
        # if there is a new version published, let's say v1.2.3
        # then this step will update branch "v1" to this commit
        # https://github.com/cypress-io/github-action/branches
        if: steps.semantic.outputs.new_release_published == 'true'
        run: 'git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/v${{steps.semantic.outputs.new_release_major_version}}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
